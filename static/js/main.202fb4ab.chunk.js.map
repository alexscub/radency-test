{"version":3,"sources":["components/Table.jsx","functions/getStates.js","functions/validations.js","functions/transformPhone.js","App.js","index.js"],"names":["Table","columns","data","getCellProps","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","striped","bordered","hover","size","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","style","states","name","abbreviation","getShortState","statesStr","split","st","length","stObj","find","el","toLowerCase","join","age","Number","isInteger","experience","exp","id","value","income","num","number","license","toString","children","hasChildren","phone","match","expiration","dataStr","Date","parse","now","email","emailStr","trim","transformPhone","App","React","useMemo","Header","accessor","Cell","parsedValue","parseFloat","toFixed","file","useRef","useState","setData","errorFile","setErrorFile","ref","type","onChange","e","preventDefault","curFile","current","files","Papa","header","transformHeader","h","headerObj","handleHeader","complete","results","tableData","errors","fields","meta","includes","forEach","i","ind","duplicate","client","isEmailDuplicate","isPhoneDuplicate","htmlFor","cellInfo","console","log","validations","backgroundColor","ReactDOM","StrictMode","document","getElementById"],"mappings":"iRAwDeA,MApDf,YAAiD,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aAE9B,EAMIC,mBAAS,CACXH,UACAC,SAPAG,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,WAOF,OACE,eAAC,IAAD,yBAAQC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MAASR,KAA7C,cACE,uBAAOS,UAAU,SAAjB,SACGP,EAAaQ,KAAI,SAAAC,GAAW,OAC3B,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,8CAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,wBAKxD,iDAAWf,KAAX,aACGE,EAAKO,KAAI,SAAAO,GAER,OADAb,EAAWa,GAET,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMT,KAAI,SAAAU,GACb,OACE,8CACMA,EAAKtB,aAAa,CACpB,CACEW,UAAWW,EAAKN,OAAOL,UACvBY,MAAOD,EAAKN,OAAOO,OAErBvB,EAAasB,MANjB,aASGA,EAAKJ,OAAO,4BC7C3BM,EAAS,CAAC,CACZC,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,iBACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,cACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,uBACNC,aAAc,MAEhB,CACED,KAAM,iCACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,QACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,YACNC,aAAc,MAEhB,CACED,KAAM,QACNC,aAAc,MAEhB,CACED,KAAM,mBACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,gBACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,YACNC,aAAc,MAEhB,CACED,KAAM,cACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,gBACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,iBACNC,aAAc,MAEhB,CACED,KAAM,eACNC,aAAc,MAEhB,CACED,KAAM,2BACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,SACNC,aAAc,MAEhB,CACED,KAAM,QACNC,aAAc,MAEhB,CACED,KAAM,eACNC,aAAc,MAEhB,CACED,KAAM,cACNC,aAAc,MAEhB,CACED,KAAM,eACNC,aAAc,MAEhB,CACED,KAAM,iBACNC,aAAc,MAEhB,CACED,KAAM,eACNC,aAAc,MAEhB,CACED,KAAM,YACNC,aAAc,MAEhB,CACED,KAAM,QACNC,aAAc,MAEhB,CACED,KAAM,OACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,MAEhB,CACED,KAAM,iBACNC,aAAc,MAEhB,CACED,KAAM,WACNC,aAAc,MAEhB,CACED,KAAM,aACNC,aAAc,MAEhB,CACED,KAAM,gBACNC,aAAc,MAEhB,CACED,KAAM,YACNC,aAAc,MAEhB,CACED,KAAM,UACNC,aAAc,OAkBHC,EAfO,SAAAC,GAYpB,OAXkBA,EAAUC,MAAM,KACZjB,KAAI,SAAAkB,GACxB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","file":"static/js/main.202fb4ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport { useTable } from 'react-table';\r\n\r\nfunction Table({ columns, data, getCellProps }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <BTable striped bordered hover size=\"sm\" {...getTableProps()}>\r\n      <thead className=\"sticky\">\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map(row => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return (\r\n                  <td\r\n                    {...cell.getCellProps([\r\n                      {\r\n                        className: cell.column.className,\r\n                        style: cell.column.style,\r\n                      },\r\n                      getCellProps(cell),\r\n                    ])}\r\n                  >\r\n                    {cell.render('Cell')}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </BTable>\r\n  );\r\n}\r\nexport default Table;\r\n","const states = [{\r\n    name: 'Alabama',\r\n    abbreviation: 'AL'\r\n  },\r\n  {\r\n    name: 'Alaska',\r\n    abbreviation: 'AK'\r\n  },\r\n  {\r\n    name: 'American Samoa',\r\n    abbreviation: 'AS'\r\n  },\r\n  {\r\n    name: 'Arizona',\r\n    abbreviation: 'AZ'\r\n  },\r\n  {\r\n    name: 'Arkansas',\r\n    abbreviation: 'AR'\r\n  },\r\n  {\r\n    name: 'California',\r\n    abbreviation: 'CA'\r\n  },\r\n  {\r\n    name: 'Colorado',\r\n    abbreviation: 'CO'\r\n  },\r\n  {\r\n    name: 'Connecticut',\r\n    abbreviation: 'CT'\r\n  },\r\n  {\r\n    name: 'Delaware',\r\n    abbreviation: 'DE'\r\n  },\r\n  {\r\n    name: 'District Of Columbia',\r\n    abbreviation: 'DC'\r\n  },\r\n  {\r\n    name: 'Federated States Of Micronesia',\r\n    abbreviation: 'FM'\r\n  },\r\n  {\r\n    name: 'Florida',\r\n    abbreviation: 'FL'\r\n  },\r\n  {\r\n    name: 'Georgia',\r\n    abbreviation: 'GA'\r\n  },\r\n  {\r\n    name: 'Guam',\r\n    abbreviation: 'GU'\r\n  },\r\n  {\r\n    name: 'Hawaii',\r\n    abbreviation: 'HI'\r\n  },\r\n  {\r\n    name: 'Idaho',\r\n    abbreviation: 'ID'\r\n  },\r\n  {\r\n    name: 'Illinois',\r\n    abbreviation: 'IL'\r\n  },\r\n  {\r\n    name: 'Indiana',\r\n    abbreviation: 'IN'\r\n  },\r\n  {\r\n    name: 'Iowa',\r\n    abbreviation: 'IA'\r\n  },\r\n  {\r\n    name: 'Kansas',\r\n    abbreviation: 'KS'\r\n  },\r\n  {\r\n    name: 'Kentucky',\r\n    abbreviation: 'KY'\r\n  },\r\n  {\r\n    name: 'Louisiana',\r\n    abbreviation: 'LA'\r\n  },\r\n  {\r\n    name: 'Maine',\r\n    abbreviation: 'ME'\r\n  },\r\n  {\r\n    name: 'Marshall Islands',\r\n    abbreviation: 'MH'\r\n  },\r\n  {\r\n    name: 'Maryland',\r\n    abbreviation: 'MD'\r\n  },\r\n  {\r\n    name: 'Massachusetts',\r\n    abbreviation: 'MA'\r\n  },\r\n  {\r\n    name: 'Michigan',\r\n    abbreviation: 'MI'\r\n  },\r\n  {\r\n    name: 'Minnesota',\r\n    abbreviation: 'MN'\r\n  },\r\n  {\r\n    name: 'Mississippi',\r\n    abbreviation: 'MS'\r\n  },\r\n  {\r\n    name: 'Missouri',\r\n    abbreviation: 'MO'\r\n  },\r\n  {\r\n    name: 'Montana',\r\n    abbreviation: 'MT'\r\n  },\r\n  {\r\n    name: 'Nebraska',\r\n    abbreviation: 'NE'\r\n  },\r\n  {\r\n    name: 'Nevada',\r\n    abbreviation: 'NV'\r\n  },\r\n  {\r\n    name: 'New Hampshire',\r\n    abbreviation: 'NH'\r\n  },\r\n  {\r\n    name: 'New Jersey',\r\n    abbreviation: 'NJ'\r\n  },\r\n  {\r\n    name: 'New Mexico',\r\n    abbreviation: 'NM'\r\n  },\r\n  {\r\n    name: 'New York',\r\n    abbreviation: 'NY'\r\n  },\r\n  {\r\n    name: 'North Carolina',\r\n    abbreviation: 'NC'\r\n  },\r\n  {\r\n    name: 'North Dakota',\r\n    abbreviation: 'ND'\r\n  },\r\n  {\r\n    name: 'Northern Mariana Islands',\r\n    abbreviation: 'MP'\r\n  },\r\n  {\r\n    name: 'Ohio',\r\n    abbreviation: 'OH'\r\n  },\r\n  {\r\n    name: 'Oklahoma',\r\n    abbreviation: 'OK'\r\n  },\r\n  {\r\n    name: 'Oregon',\r\n    abbreviation: 'OR'\r\n  },\r\n  {\r\n    name: 'Palau',\r\n    abbreviation: 'PW'\r\n  },\r\n  {\r\n    name: 'Pennsylvania',\r\n    abbreviation: 'PA'\r\n  },\r\n  {\r\n    name: 'Puerto Rico',\r\n    abbreviation: 'PR'\r\n  },\r\n  {\r\n    name: 'Rhode Island',\r\n    abbreviation: 'RI'\r\n  },\r\n  {\r\n    name: 'South Carolina',\r\n    abbreviation: 'SC'\r\n  },\r\n  {\r\n    name: 'South Dakota',\r\n    abbreviation: 'SD'\r\n  },\r\n  {\r\n    name: 'Tennessee',\r\n    abbreviation: 'TN'\r\n  },\r\n  {\r\n    name: 'Texas',\r\n    abbreviation: 'TX'\r\n  },\r\n  {\r\n    name: 'Utah',\r\n    abbreviation: 'UT'\r\n  },\r\n  {\r\n    name: 'Vermont',\r\n    abbreviation: 'VT'\r\n  },\r\n  {\r\n    name: 'Virgin Islands',\r\n    abbreviation: 'VI'\r\n  },\r\n  {\r\n    name: 'Virginia',\r\n    abbreviation: 'VA'\r\n  },\r\n  {\r\n    name: 'Washington',\r\n    abbreviation: 'WA'\r\n  },\r\n  {\r\n    name: 'West Virginia',\r\n    abbreviation: 'WV'\r\n  },\r\n  {\r\n    name: 'Wisconsin',\r\n    abbreviation: 'WI'\r\n  },\r\n  {\r\n    name: 'Wyoming',\r\n    abbreviation: 'WY'\r\n  },\r\n];\r\nconst getShortState = statesStr => {\r\n  const statesArr = statesStr.split('|');\r\n  const res = statesArr.map(st => {\r\n    if (st.length === 2) {\r\n      return st;\r\n    }\r\n    const stObj = states.find(el => el.name.toLowerCase() === st.toLowerCase());\r\n    if (!stObj) {\r\n      return st;\r\n    }\r\n    return stObj.abbreviation;\r\n  });\r\n  return res.join(', ');\r\n};\r\n\r\nexport default getShortState\r\n","export default {\r\n  name(name) {\r\n    return !!name;\r\n  },\r\n  age(age) {\r\n    if (!age) {\r\n      return false\r\n    }\r\n    return +age >= 21 && Number.isInteger(+age);\r\n  },\r\n  experience(exp, row) {\r\n    if (!exp) {\r\n      return false\r\n    }\r\n    return (\r\n      +exp >= 0 &&\r\n      +exp < +row.find(cell => cell.column.id === 'age').value - 21\r\n    );\r\n  },\r\n  income(num) {\r\n    if (!num) {\r\n      return false\r\n    }\r\n    return +num >= 0 && +num < 1000000;\r\n  },\r\n  number(license) {\r\n    if (!license) {\r\n      return false\r\n    }\r\n    return license && license.toString().length === 6;\r\n  },\r\n  children(hasChildren) {\r\n    return (\r\n      hasChildren === 'TRUE' || hasChildren === 'FALSE' || hasChildren === ''\r\n    );\r\n  },\r\n  phone(phone) {\r\n    if (!phone) {\r\n      return false\r\n    }\r\n    return phone.match(/^\\+1\\d{10}$|^1\\d{10}$|^\\d{10}$/);\r\n  },\r\n  expiration(dataStr) {\r\n    if (!dataStr) {\r\n      return false\r\n    }\r\n    return (\r\n      dataStr.match(\r\n        /^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$|^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/,\r\n      ) && Date.parse(dataStr) > Date.now()\r\n    );\r\n  },\r\n  email(emailStr) {\r\n    if (!emailStr) {\r\n      return false\r\n    }\r\n    emailStr = '' + emailStr;\r\n    return emailStr\r\n      .trim()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n      );\r\n  },\r\n};;\r\n","const transformPhone = phone => {\r\n  if (phone.match(/^1\\d{10}/)) {\r\n    return '+' + phone;\r\n  }\r\n  if (phone.match(/^\\d{10}/)) {\r\n    return '+1' + phone;\r\n  }\r\n  return phone;\r\n};\r\n\r\nexport default transformPhone;\r\n","import './App.css';\nimport React, { useRef, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Papa from 'papaparse';\nimport Table from './components/Table.jsx';\nimport getShortState from './functions/getStates.js';\nimport validations from './functions/validations.js';\nimport transformPhone from './functions/transformPhone.js';\n\nfunction App() {\n  const columns = React.useMemo(() => [\n    {\n      Header: 'ID',\n      accessor: 'id',\n    },\n    {\n      Header: 'Full Name',\n      accessor: 'name',\n    },\n    {\n      Header: 'Phone',\n      accessor: 'phone',\n      Cell: ({ value }) => {\n        return transformPhone(value);\n      },\n    },\n    {\n      Header: 'Email',\n      accessor: 'email',\n    },\n    {\n      Header: 'Age',\n      accessor: 'age',\n    },\n    {\n      Header: 'Experience',\n      accessor: 'experience',\n    },\n    {\n      Header: 'Yearly Income',\n      accessor: 'income',\n      Cell: ({ value }) => {\n        const parsedValue = parseFloat(value);\n        if (!parsedValue) {\n          return value || '';\n        }\n        return parsedValue.toFixed(2);\n      },\n    },\n    {\n      Header: 'Has children',\n      accessor: 'children',\n      Cell: ({ value }) => {\n        if (value === '') {\n          return 'FALSE';\n        }\n        return value;\n      },\n    },\n    {\n      Header: 'License states',\n      accessor: 'states',\n      Cell: ({ value }) => {\n        return getShortState(value);\n      },\n    },\n    {\n      Header: 'Expiration date',\n      accessor: 'expiration',\n    },\n    {\n      Header: 'License number',\n      accessor: 'number',\n    },\n    {\n      Header: 'Duplicate with',\n      accessor: 'duplicate',\n    },\n  ]);\n  const file = useRef(null);\n  const [data, setData] = useState(null);\n  const [errorFile, setErrorFile] = useState(null);\n\n  const handleHeader = header => {\n    const headerObj = columns.find(\n      el => el.Header.trim().toLowerCase() === header.toLowerCase(),\n    );\n\n    return headerObj ? headerObj.accessor : 'error header';\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setErrorFile(null);\n    const curFile = file.current.files[0];\n    Papa.parse(curFile, {\n      header: true,\n      transformHeader(h) {\n        return handleHeader(h);\n      },\n      complete(results) {\n        const tableData = results.data;\n        if (results.errors.length > 0) {\n          return setErrorFile('File format is not correct');\n        }\n        const { fields } = results.meta;\n        if (\n          !fields.includes('name') ||\n          !fields.includes('phone') ||\n          !fields.includes('email')\n        ) {\n          return setErrorFile('File is not correct');\n        }\n        tableData.forEach((el, i) => {\n          el.id = i + 1;\n        });\n        tableData.map((el, ind) => {\n          const duplicate = tableData.find((client, i) => {\n            const isEmailDuplicate =\n              client.email.trim().toLowerCase() ===\n                el.email.trim().toLowerCase() && i !== ind;\n            const isPhoneDuplicate =\n              transformPhone(client.phone.trim()) ===\n                transformPhone(el.phone.trim()) && i !== ind;\n            return isEmailDuplicate || isPhoneDuplicate;\n          });\n          if (duplicate) {\n            el.duplicate = duplicate.id;\n          }\n        });\n        setData(tableData);\n      },\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <input\n        className=\"File\"\n        id=\"file\"\n        ref={file}\n        type=\"file\"\n        onChange={handleChange}\n      />\n      <label className=\"customFile\" htmlFor=\"file\">\n        <span className=\"filename\">\n          {file && file.current\n            ? file.current.files[0].name\n            : 'Choose your csv to parse'}\n        </span>\n        <span className=\"browseButton\">Browse</span>\n      </label>\n\n      {errorFile && <p className=\"error\">{errorFile}</p>}\n      {data && !errorFile && (\n        <Table\n          columns={columns}\n          data={data}\n          getCellProps={cellInfo => {\n            console.log(cellInfo.value);\n            const value = '' + cellInfo.value;\n            if (\n              validations[cellInfo.column.id] &&\n              !validations[cellInfo.column.id](value.trim(), cellInfo.row.cells)\n            ) {\n              return {\n                style: {\n                  backgroundColor: '#f79494',\n                },\n              };\n            }\n            return {\n              style: {},\n            };\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}